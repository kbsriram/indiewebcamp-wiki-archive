http://indiewebcamp.com/URL_design

{{stub}}

'''<dfn>URL design</dfn>''' is the practice of deliberately [[design]]ing URLs, in particular, [[permalinks]], typically for a better [[UX]] for everyone who [[create]]s, [[read]]s, and [[share]]s content.

== Why ==
By deliberately designing your URLs and URL structure, especially permalinks, you can: 
* make them more usable
* communicate date of publication
* communicate rough topic of publication
* make it easier for you to change your permalink policies over time (without breaking, or even having to change past years)

== How ==

=== More Usable ===
Make your permalinks more usable by:
* keeping your URLs human readable for simpler conveyance of information with URLs
* keeping your URLs short for easier sharing and reducing mental overload
* omitting giant long strings of numbers or characters, i.e. [[database]] IDs

=== Dates ===
Communicate date of publication by using a top-level structure that starts with the date:
* <code>/YYYY/MM/DD/</code> - the date in order of hierarchical significance
* <code>/YYYY/DDD/</code> - ISO ordinal date, saves two characters (shorter is better, though may not be immediately understood by human readers), and communicates a linearity to your year of posts.

=== Topic ===
Communicate topic by using a "slug" somewhere after the date, e.g.
* <code>../tag1-tag2-tag3</code>
Also:
* Many put the slug at the end of their permalinks
* Make the slug optional if at all possible, since it contains human written/readable/editable content and you may want to change it after the fact without any need for maintenance.

=== Content Type ===
Individuals with large quantities of different content types may want to differentiate in the URL what type of content to expect, as it primes the user for the subsequent interactions with the content. For example, take this comparison:
* <code>/2014/11/10/url-design</code> - This URL could be anything about "URL design." It could be an [[article]], a [[favorite]], a [[reply]], or even a [[photo]] about "URL design."
* <code>/2014/11/10/reply/url-design</code> - This URL would be give the reader of the URL immediate understanding of the content to expect at that URL: a [[reply]]. If a person was not looking for this type of content, it would allow them the ability to skip over this content or be ready for a threaded conversation around "URL design."

=== Ordinal ===
One of the drawbacks of having an optional topic slug as mentioned above is that a lot of posts could become difficult to pinpoint when posting multiple times per day. Adding a time-relative ordinal to the end of a given Date allows for better pinpointing while still maintaining relevancy to readers of the URL. Take the two Dates formats listed above and simply add the ordinal at the end (N). This maintains hierarchical significance in both types of Date URL structure.
* <code>/YYYY/MM/DD/N/</code>
* <code>/YYYY/DDD/N/</code>

== Avoid ==
See everything listed in this article and expand here inline:
* http://manas.tungare.name/blog/url-design-sins-16-things-that-dont-belong-in-urls/

== IndieWeb Examples ==
See: [[permalinks#Indieweb_Practices]]

== FAQ ==
=== Why Not US Date Order ===
Q: Why not US date order like <samp>/march/15/2014/</samp> ?

A: Lots of problems with this:
# US-centric - the web is world-wide
# English-centric month name "march" is not international friendly (again, *world-wide* web)
# does not follow hierarchical significance - "march" and "15" are less significant than 2014.
# makes it harder to change URL policies every year (since the year is the 3rd component instead of the first.

=== Time ===
Q: What is a good way to represent time in a URL?

A: There are several reasonable approaches. Using zero-padded hours HH (24hr), minutes MM, and seconds SS:

# Immediately after the date with separators, e.g. <blockquote><code>/YYYY/MM/DD/HH/MM/SS</code></blockquote> or even <blockquote><code>/YYYY/MM/DD/HH:MM:SS</code></blockquote>
# Immediately after the date without separators - less readable but ok <blockquote><code>/YYYY/MM/DD/HHMMSS</code></blockquote>

Omitting the seconds SS is ok too if you don't find yourself posting more than once a minute. <blockquote><code>/YYYY/MM/DD/HH:MM</code></blockquote>

Alternatively if you post more than once a second (e.g. automatic metrics), you may want to include a digit or two of decimal seconds. <blockquote><code>/YYYY/MM/DD/HH:MM:SS.ss</code></blockquote>

=== Why not AM PM ===
Q: Why not times with AM and PM like <samp>/12:57pm/</samp>?

A: Some problems with this:
# AM/PM are easily confused / misread (bad for usability)
# makes the URL longer unnecessarily (compared to 24hr time)
# less international - 24hr time is more readily recognized when reading world-wide.

=== Why not content type first ===
Q: Why not put the type of content first in the URL structure, e.g. <blockquote><code>/reply/2014/11/10</code></blockquote> ?

A: Many reasons:
# '''The more known/stable aspect should go first.''' Dates are much more well understood (stable) and well known than "kinds" of [[posts]], which are still squishy and growing. Permalinks and URLs in general are supposed to be stable, thus putting the more stable pieces first makes sense. Less change if you do have to change the squishy parts.
# '''Year first allows changing URL policies''' more easily, like once a year. If your year is first, you can set a policy for how your URLs work each year and change it, not having to go back and change past years.
# '''Experience.''' {{aaronpk}} in particular started with a type-first URL structure, and is now having to convert it all to date first because of various scaling, storage, and other reasons.[http://indiewebcamp.com/irc/2014-10-30#t1414695058382]

== Articles ==
More thoughts on (potentially additional aspects of) URL design:
* http://manas.tungare.name/blog/url-design-sins-16-things-that-dont-belong-in-urls/
* http://warpspire.com/posts/url-design/
* http://www.smashingmagazine.com/2014/05/02/responsive-design-begins-with-the-url/
* http://www.creativebloq.com/design/design-perfect-url-1126509
* http://www.webmonkey.com/2011/01/a-guide-to-designing-cool-urls/
* http://www.w3.org/Provider/Style/URI

== See Also ==
* [[design]]
