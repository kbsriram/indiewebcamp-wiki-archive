Fragmention is an experimental idea to link/refer to an arbitrary part of a document.

= Overview =

Fragmentions enable you to use ## double-hash anchors as links to individual words or phrases on in a document.

= Brainstorming =

*  [[User:Kevinmarks.com|Kevin Marks]] had [http://indiewebcamp.com/irc/2014-04-16/line/1397696273 the idea] of using <pre>http://example.com/##this+is+a+test</pre> as a link to the part of the document with text <pre>this is a test</pre> and [[User:Jonathantneal.com|Jonathan Neal]] wrote a [https://github.com/chapmanu/fragmentions script] and a [https://chrome.google.com/webstore/detail/fragmentions/pgajkeekgcmgglngchhmcmnkffnhihck Chrome extension] to implement auto-scrolling to and highlighting fragmentions.

= Usage =

Fragmentions find the first matching word or phrase in a document and focuses its closest surrounding element. The match is determined by the case-sensitive string following the ## double-hash. The closest surrounding element may be a span, paragraph, heading, button, input, or any other container.

= Implementations =
== indieweb implementations ==
* [http://sandbox.thewikies.com/fragmentions/example.html##individual+words+and+phrases Jonathan's example page] 
* [http://www.kevinmarks.com/w3cannotation.html##most+robust+reference Kevin's original page with Jonathan's script added]
* [http://www.kevinmarks.com/fragmentions.html blogpost] explaining the idea more generally.
* [http://aaronparecki.com/articles/2014/03/23/1/posting-photos-on-my-own-site##start+using+this Aaron's site] - note the custom CSS for the highlighted paragraph
* [http://shakespeare.sayit.mysociety.org/much-ado-about-nothing/act-iv/scene-i-a-church##link+my+dear+friend sayit.mysociety.org], thanks to Matthew Somerville. Shakespeare, government inquiries, and any other transcripts - [http://sayit.mysociety.org/ more information]
* [https://github.com/idno/idno/commit/04f79c792d07dc14f8f32b320c9ec39427f06a09 idno adds support] thanks to [http://werd.io/ Ben Werdmüller]
* A [https://christiaanconover.com/code/wp-fragmention wordpress plugin] to add fragmentions by [https://christiaanconover.com/ Christiaan Conover]
* [http://blog.vrypan.net/2014/04/22/fragmentions/##inside+the+page Panayotis Vryonis' personal blog]
* [http://indiewebcamp.com/fragmention##this+wiki this wiki] itself! Thanks [http://aaronparecki.com/ Aaron]
* [https://drupal.org/sandbox/ocean/2247743 A drupal plugin] by Drew Robinson
* [https://github.com/goblindegook/Fragmentions/ another wordpress plugin] by Luís R.

== silo implementations ==
* [http://epeus.blogspot.com/2003/02/googles-origins-hint-about-blogger.html##for+annotation Kevin's blogger blog] by adding the fragmention JS to the template

= Challenges =

While most find the idea of fragmentions delightful, there are differing ideas on how they should work. We ask contributors to justify feature requests with concrete real world examples, as tests in the wild may reveal best practices. Otherwise, any of these challenges could be appended with, ''“So, uh, what do you think?”''

== Double-hashes in the wild ==

The [http://tools.ietf.org/html/rfc3986#appendix-A URL spec] doesn't define fragments to contain hash signs, so links like <nowiki><a href="##foo"></nowiki> may fail validation, or be misparsed by strict URL parsers. if this is an issue, we may need to switch to #*
: For future reference. Valid characters as per URL spec are: <nowiki>ALPHA / DIGIT / "-" / "." / "_" / "~" / "%" HEXDIG HEXDIG / "!" / "$" / "&" / "'" / "(" / ")" / "*" / "+" / "," / ";" / "=" / ":" / "@" / "/" / "?" </nowiki> -[[User:Sandeep.io|Sandeep.io]] 20:58, 23 April 2014 (PDT)
On the other hand, [http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#the-id-attribute HTML5 id's] can contain #. So browsers may interpret links like <nowiki><a href="##foo"></nowiki> with two meanings - the question is if IDs starting with # occur on the web. 

The initial feedback is that few people concern themselves with hash fragment validation, and even less would (at least, knowingly) use them in this way.


Further thought: as HTML5 ids can contain any text except a space character, any fragment with a space in CANNOT refer to an id, so could be treated as a fragmention. So any fragmention of more than one word may not even need the ##.

: The problem with this approach is that auto-linkers and URLs in other context (like plain text) don't know where the URL ends. -[[User:Sandeep.io|Sandeep.io]] 20:56, 23 April 2014 (PDT)

== Sensitivity ==
After trying it both ways, collapsing white space works better, as it is very hard to generate invisible escaped characters accurately.

Matching case is strict, but makes it easier to target specific text. Ignoring case is cavalier, but makes it easier to target anything.

The initial feedback is conflicting. Some expected fuzzy matching. Others expected specific matching. Most agreed that it depends on your specific use-cases, which are sorely lacking in most of the annotations discussions. Fuzzy matching could be seen as a further fallback strategy if direct matching fails.

== URL encoding ==

Fragmentions are decoded before search, which means <nowiki>+</nowiki> plus signs are interpreted as spaces or must be escaped (<nowiki>%2B</nowiki>). This makes for prettier, conforming URLs, but may also be confusing for users targeting phrases with special characters.

== Proposed icon ==
[[File:highlink.svg]] - This combines highlighting with linking and is thus a classic over-literal design by an engineer. Graphic designers very much welcomed to come up with something better.

= Related work =
The NY Times has [http://open.blogs.nytimes.com/2011/01/11/emphasis-update-and-source/ a tool for annotating articles], but it makes a very complex anchor and requires a very specific algorithm. [https://github.com/NYTimes/Emphasis source here]

There is a w3c spec for addressing [http://www.w3.org/TR/media-frags Media Fragments] but it explicitly excludes HTML.

[http://www.pullquote.com/ Pullquote] generates images to embed longer quotes in twitter. Getting it to generate fragmentions would be an excellent enhancement.

"Purple numbers" (per paragraph anchor tags) have been a feature of many blogs, for example [http://scripting.com/2014/02/23/designChallengeParagraphlevelPermalinks.html#aNTTPH Dave Winer's] and [http://www.tbray.org/ongoing/When/200x/2004/05/31/PurpleAgain#p-5 Tim Bray's Ongoing] but they do need to be added by the authoring software. Fragmentions can be chosen independently of authorship. Or a client-side script could generate them per-paragraph.

[http://www.savepublishing.com/ Save Publishing] a bookmarklet by [http://www.ftrain.com/ Paul Ford] that highlights tweetable sentences, could be enhanced by fragmentions.

[http://documentation.superfeedr.com/subscribers.html#htmlfragments SuperFeedr] allows subscribing to HTML fragments - enhancing this with fragmentions could be interesting.

[http://www.gerv.net/software/fragment-search/ Fragment Search] by [http://blog.gerv.net/2007/02/fragment_search/ Gervase Markham] in 2007 is  the same idea, with a more complex syntax #!s!search%20term and #!s3!search%20term for 3rd occurrence.


[http://zesty.ca/crit/draft-yee-url-textsearch-00.txt Text-Search Fragment Identifiers] E.g., <nowiki>http://example.com/index.html#:words:(distinguish)</nowiki> and <nowiki>http://example.com/index.html#:words:serve-as-context-to-(distinguish)</nowiki> and <nowiki>http://example.com/index.html#:words:context-to-(distinguish)-multiple-occurrences</nowiki>


[http://dret.net/netdret/docs/wilde-ht2005-textfrag.pdf Fragment Identiﬁers for Plain Text Files] E.g., <nowiki>http://example.com/text.txt#line=10,20</nowiki> and <nowiki>http://example.com/text.txt#match=[rR][fF][cC]</nowiki>


[http://internet-apps.blogspot.in/2007/11/using-urls-to-pass-parameters-to-web.html Using URLs to pass parameters to web applications, widgets and gadgets] proposes #meta(). E.g., <nowiki>http://www.google.com/reader#meta(width=900,height=500,autohide,position=top)</nowiki>


[https://github.com/mhausenblas/addrable Addrable] E.g., table1.csv#where:city=Berlin,person=Richard

[https://hypothes.is/blog/fuzzy-anchoring/ Hypothes.is fuzzy anchors] and [https://github.com/hypothesis/h/wiki/robust-anchors robust anchors] have some good discussion of the broader area, and some code too.

See also: http://en.wikipedia.org/wiki/Fragment_identifier#Proposals

= Discussion =

Alternative proposal: use quoted string literals. Example: <nowiki>http://example.com/index.html#"string to search"</nowiki>. &mdash;[[User:Sandeep.io|Sandeep.io]] 20:11, 23 April 2014 (PDT)
On thinking about this a little, it doesn't sound like a good idea (for various reasons including the fact that the href attribute is quote delimited), but I like conveying the idea of "search for string literal" &mdash;[[User:Sandeep.io|Sandeep.io]] 20:30, 23 April 2014 (PDT)