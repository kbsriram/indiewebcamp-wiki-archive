http://indiewebcamp.com/spam

{{stub}}

'''<dfn>spam</dfn>''' is unsolicited content, often transmitted via [[email]], submitted as blog [[comments]] or posted to [http://microformats.org/wiki/Special:RecentChanges popular wikis].

Almost any type of data entry on the web could potentially be vulnerable to spammy content. Typically the most vulnerable are unprotected comments forms and endpoints consistent across domains due to [[monoculture]].

== The Coming Spam Storm ==
Spam has effectively destroyed earlier protocols of [[pingback]]/[[trackback]], and [[WordPress]] reblogs.
* http://piedtype.com/2013/05/21/spammers-use-trackbacks-pingbacks-and-reblogs/ 

If/when [[webmention]] + [[h-entry]] [[replies]]/[[comments]]/[[likes]]/[[reposts]]/[[RSVPs]] succeed, the spammers will adopt it as well.

It behooves us, the indieweb, to be pre-emptively thinking about how to fight spam.

If you accept webmentions and alter your display in any way (showing cross-site comments, likes, reposts, RSVPs), then you are potentially vulnerable to being spammed.

=== WordPress Spam ===
[[WordPress]] is both a huge target and tool for spammers. The more popular WordPress has become, the more they've targeted it. By analyzing spammers tactics (and weaknesses) against WordPress, we may find clues that help us block them from the indieweb.

==== Pingback Spam ====
WordPress is perhaps the top target of [[Pingback]] spam. So much so that Akismet is about to shut off (or has already?) pingbacks. As cited above:
* http://piedtype.com/2013/05/21/spammers-use-trackbacks-pingbacks-and-reblogs/ 

==== Like Spam ====
WordPress introduced a WordPress-only feature called "WordPress Like" which is essentially their version of the [[Facebook]] "Like" button. Spammers create [[WordPress.com]] spam blogs and then "Like" other WordPress blogs in order to get links to their spam blogs. As such, WordPress users complain of most of their likes being "fake" or from spammers only.
* http://piedtype.com/2013/05/02/spammers-like-wordpress-news-too/
* http://piedtype.com/2013/04/20/why-i-turned-off-wordpress-like/

==== Follower Spam ====
As noted in:
* http://onecoolsitebloggingtips.com/2013/04/09/wordpress-com-follower-management/
* http://piedtype.com/2013/04/12/issues-wordpress-needs-to-address/

As noted in the onecoolsitebloggingtips post, spam blogs have several weaknesses:
* linking to non-existent Twitter/Facebook/WordPress.com profiles
* linking to Twitter/Facebook/WordPress.com profiles not updated in months

This implies that if we require [[rel-me]] symmetry link checks on any Twitter/Facebook/WordPress.com (and other?) sites that someone links to, we can filter out some of the spam.


== Spam Prevention ==
There are a great many techniques that can be utilized to prevent spam.

Note: <em>Prevent</em>, not minimize. The goal here is make spam defense a <strong>zero maintenance</strong> feature. Partial solutions, going through moderation queues etc. still adds a maintenance tax, which no one wants.

=== Degrees of Separation ===
'''Note:''' The following is a brainstorm, does not reflect current implementations and probably needs work --[[User:Waterpigs.co.uk|Waterpigs.co.uk]] 16:21, 22 May 2013 (PDT)

Typically I consider whitelists to be a negative thing for accepting general commentary — it seems elitist and similar to search bubbling (i.e. trapped in a bubble). However, whitelists are the most straightforward and probably most effective prevention measures.

So, a more flexible whitelist-based approach might be implemented as follows:

Initial setup:

* I start with a whitelist of people — e.g. my address book (1st degree contacts)
* My software crawls their websites and extracts [[XFN]] data and [[mentions]] of people (2nd degree contacts)
* I associate each 2nd degree contact with their associated 1st degree contact, building a graph without actually adding the 2nd degree people to my address book
* I periodically re-crawl the graph and update accordingly
** perhaps subscribing to their feeds via [[pubsubhubbub]] and adding any mentioned people would be a good solution
** Do we have a way of notifying interested parties that an XFN listing has been updated?
* Whenever a new contact is added (or a 2nd degree contact is moved to 1st degree) their website is crawled for mentions to add to the graph

Posting a note mentioning someone:

# I post a note [[mention]]ing/[[in reply to]] someone not yet in my address book
# Their website is crawled, any [[microformats]] are parsed and they are added as a 1st degree contact
# Any future comments from them are accepted automatically as detailed below

Receiving a comment from a 1st degree contact:

# I post a note, and someone in my address book submits a comment
# The comment is automatically approved as they are 1st degree contact
# Any person they mention in that comment is added to the graph as 2nd degree contacts
#* TODO: or 1st degree, as they’ve actively been included in the conversation?

Receiving a comment from an unknown person:

# I post a note
# Someone I don’t know submits a comment, which is not displayed publicly
# I receive a notification asking me to approve the person
#* If I do so, they are added to my address book, their comment goes public and all future comments from them are accepted
#* If I do not, they are added to a blacklist and any further comments from them are ignored

=== Twitter follows follows ===
In a turnabout of sorts, we can use existing [[silo]] connections as a potential spam filter as well.

Here's you could use Twitter's social graph as a dynamic second degree whitelist:

Note: when you visit someone's profile on [[Twitter]], if you're not already following them, it shows you which of the people you <em>are</em> following (your "follows"), are following them. This could be used in the following way:

Algorithm:

When your site A receives a comment from an indieweb site B:
* Does B have a confirmed [[rel-me]] link to a [[Twitter]] profile Tb?
* Does your Twitter Ta follow Tb? Yes? Accept the comment.
* Do any of Ta's follows follow Tb? Yes? Accept the comment.

=== Other ===
Perhaps break these into separate sections if you're considering pursuing them:

* Moderation — the most simple form of prevention. Don’t publicly display any 3rd party submitted data until you’ve manually approved it

* [[captchas]] — images or challenges designed to flummox a machine but be trivial for a human to complete
** For example “write the (obfuscated image) code in the box” or “enter the sum of 4 and 6”
** Major UX issues ([http://uxmovement.com/forms/captchas-vs-spambots-why-the-checkbox-captcha-wins], [http://www.webdesignerdepot.com/2013/02/recaptchaing-the-importance-of-ux/])

* Automated spam detection — use some learning algorithm/training data to decide whether or not it’s likely to be spam
** Example service: [http://akismet.com/ akismet]
** [[Pump.io]]'s spam filtering software: [https://github.com/e14n/activityspam e14n/activityspam]

* Blacklisting — figure out from which IPs a lot of spam comes, blacklist them

* Whitelisting — the opposite of blacklisting. Have a predetermined list of people from which you will accept data

* High barrier to entry — a little similar to a captcha: force the user to perform some task/satisfy some condition before allowing them to enter data.
** An example being this very wiki — we have zero spam due to the need to log in using your own domain via [[indieauth]] (we've been lucky / under the radar - spammers have blogs and know how to link to spam profiles on other networks like [[Twitter]].

* Payment via Hashcash

== Spam Prevention Service Brainstorming ==

A web service which, given a source and a target, returns a simple spam/ham/requires-moderation response.

Sign up+crawl flow:
* You sign up for anti-spam using indieauth
* anti-spam builds a list of all the people in your social graph
** crawls [[XFN]]
** crawls+subscribes to feeds, continuously automatically adds people you link to, reducing maintenance
** detects linked-to silos and crawls silo social graphs

Webmention filtering flow:
* When you receive a webmention, you pass the source and target URLs to an anti-spam endpoint, which returns “spam/ham/requires-moderation” based on whether you, or anyone you linked to, has linked to the source domain before
** optionally also a bunch of other information e.g. how many degrees of separation between you, which of the people you’ve linked to also linked to them — this could be put to excellent use in a moderation UI
* your publishing software processes or discards the webmention as required — it’s up to your software to handle moderation UI and flow.

Spam reporting flow:
* one way or another you’ve come across some spam
* send a POST request to anti-spam.com/report or some such endpoint with the URL
* that domain gets added to your personal blacklist
** perhaps also either to a global anti-spam list, or maybe blacklists should be shared in the same way whitelists are, where if a domain is in your blacklist or the blacklist of anyone you’ve linked to, they get blocked.

Possible other option: webmention proxy. You use anti-spam.com or whatever as your webmention endpoint, which forwards non-spam webmentions to your real endpoint, perhaps with some extra parameter indicating if it needs moderation. Requests would be signed, making it easy to determine that they are in fact from anti-spam

== iMessage Spam ==
Apparently iMessage is now being spammed, by spammers registering hotmail.com addresses as AppleIDs:

Received 2013-11-30 11:14 PST

[[File:imsg_spam.PNG|frameless]]

== See also ==
* [[comments]]
* [[DDOS]]
* [[webmention]]
* [[comment]]
